# Copyright (c) 2020 Digital Asset (Switzerland) GmbH and/or its affiliates. All rights reserved.
# SPDX-License-Identifier: Apache-2.0

################################################################################
# NOTE: this file is not intended to be executed manually.
#       it should be used with it.sh + fabric.sh only...

version: '2'

services:
  orderer.example.com:
    image: hyperledger/fabric-orderer${IMAGE_TAG_FABRIC}
    hostname: orderer.example.com
    environment:
      - FABRIC_LOGGING_SPEC=debug
#     - ORDERER_GENERAL_LOGLEVEL=error
      - ORDERER_GENERAL_LISTENADDRESS=0.0.0.0
      - ORDERER_GENERAL_GENESISMETHOD=file
      - ORDERER_GENERAL_GENESISFILE=/etc/hyperledger/configtx/genesis.block
      - ORDERER_GENERAL_LOCALMSPID=OrdererMSP
      - ORDERER_GENERAL_LOCALMSPDIR=/etc/hyperledger/msp/orderer/msp
      - ORDERER_GENERAL_TLS_ENABLED=true
      - ORDERER_GENERAL_TLS_CLIENTAUTHREQUIRED=false
      - ORDERER_GENERAL_TLS_PRIVATEKEY=/etc/hyperledger/msp/orderer/tls/server.key
      - ORDERER_GENERAL_TLS_CERTIFICATE=/etc/hyperledger/msp/orderer/tls/server.crt
      - ORDERER_GENERAL_TLS_ROOTCAS=[/etc/hyperledger/msp/orderer/tls/ca.crt]
      - ORDERER_GENERAL_TLS_CLIENTROOTCAS=[/etc/hyperledger/msp/peerOrg1/msp/tlscacerts/tlsca.org1.example.com-cert.pem, /etc/hyperledger/msp/peerOrg2/msp/tlscacerts/tlsca.org2.example.com-cert.pem, /etc/hyperledger/msp/peerOrg2/msp/tlscacerts/tlsca.org3.example.com-cert.pem, /etc/hyperledger/msp/peerOrg2/msp/tlscacerts/tlsca.org4.example.com-cert.pem, /etc/hyperledger/msp/peerOrg2/msp/tlscacerts/tlsca.org5.example.com-cert.pem]
      - GRPC_TRACE=all=true,
      - GRPC_VERBOSITY=debug
      - ORDERER_GENERAL_AUTHENTICATION_TIMEWINDOW=3600s #Not for production -- remove.
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric
    command: >
      sh -c "
      mkdir -p /etc/hyperledger/configtx &&
      mkdir -p /etc/hyperledger/msp/orderer &&
      mkdir -p /etc/hyperledger/msp/peerOrg1 &&
      mkdir -p /etc/hyperledger/msp/peerOrg2 &&
      echo \"${CONFIGTX}\" | base64 -d| tar -C /etc/hyperledger/configtx -xzvvf - &&
      cp -r /etc/hyperledger/configtx/crypto-config/ordererOrganizations/example.com/orderers/orderer.example.com/* /etc/hyperledger/msp/orderer &&
      cp -r /etc/hyperledger/configtx/crypto-config/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/* /etc/hyperledger/msp/peerOrg1 &&
      cp -r /etc/hyperledger/configtx/crypto-config/peerOrganizations/org2.example.com/peers/peer0.org2.example.com/* /etc/hyperledger/msp/peerOrg2 &&
      orderer"
    ports:
      - 10050:7050

  peer0.org1.example.com:
    hostname: peer0.org1.example.com
    extends:
      file: peer-base/peer-base-ci.yaml
      service: peer-base
    environment:
      - CORE_PEER_ID=peer0.org1.example.com
      - CORE_PEER_ADDRESS=peer0.org1.example.com:7051
      - CORE_PEER_EVENTS_ADDRESS=0.0.0.0:7053
      - CORE_PEER_GOSSIP_EXTERNALENDPOINT=peer0.org1.example.com:7051
      - CORE_PEER_GOSSIP_ENDPOINT=peer0.org1.example.com:7051
 #     - CORE_PEER_GOSSIP_ORGLEADER=true
      - CORE_PEER_LOCALMSPID=Org1MSP
      - CORE_PEER_GOSSIP_BOOTSTRAP=peer0.org1.example.com:7051

#      - CORE_PEER_TLS_ROOTCERT_FILE=/etc/hyperledger/msp/peer/msp/cacerts/ca.org1.example.com-cert.pem
      - CORE_PEER_TLS_CLIENTROOTCAS_FILES=/etc/hyperledger/msp/peer/msp/tlscacerts/tlsca.org1.example.com-cert.pem
    command: >
      sh -c "
      mkdir -p /etc/hyperledger/configtx &&
      mkdir -p /etc/hyperledger/msp/peer &&
      echo \"${CONFIGTX}\" | base64 -d | tar -C /etc/hyperledger/configtx -xzvvf - &&
      cp -r /etc/hyperledger/configtx/crypto-config/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/* /etc/hyperledger/msp/peer &&
      peer node start"
    volumes:
      - /var/run/:/host/var/run/
    ports:
      - 10051:7051
      - 10053:7053
    depends_on:
      - orderer.example.com

  peer0.org2.example.com:
    hostname: peer0.org2.example.com
    extends:
      file: peer-base/peer-base-ci.yaml
      service: peer-base
    environment:
      - CORE_PEER_ID=peer0.org2.example.com
      - CORE_PEER_ADDRESS=peer0.org2.example.com:7056
      - CORE_PEER_LISTENADDRESS=peer0.org2.example.com:7056
      - CORE_PEER_EVENTS_ADDRESS=0.0.0.0:7058
      - CORE_PEER_GOSSIP_EXTERNALENDPOINT=peer0.org2.example.com:7056
      - CORE_PEER_GOSSIP_ENDPOINT=peer0.org2.example.com:7056
      - CORE_PEER_GOSSIP_BOOTSTRAP=peer0.org2.example.com:7056
      - CORE_PEER_LOCALMSPID=Org2MSP
#      - CORE_PEER_TLS_ROOTCERT_FILE=/etc/hyperledger/msp/peer/msp/cacerts/ca.org1.example.com-cert.pem
      - CORE_PEER_TLS_CLIENTROOTCAS_FILES=/etc/hyperledger/msp/peer/msp/tlscacerts/tlsca.org2.example.com-cert.pem
    command: >
      sh -c "
      mkdir -p /etc/hyperledger/configtx &&
      mkdir -p /etc/hyperledger/msp/peer &&
      echo \"${CONFIGTX}\" | base64 -d | tar -C /etc/hyperledger/configtx -xzvvf - &&
      cp -r /etc/hyperledger/configtx/crypto-config/peerOrganizations/org2.example.com/peers/peer0.org2.example.com/* /etc/hyperledger/msp/peer &&
      peer node start"
    volumes:
      - /var/run/:/host/var/run/
    ports:
      - 10056:7056
      - 10058:7058
    depends_on:
       - orderer.example.com

#  peer0.org3.example.com:
#    hostname: peer0.org3.example.com
#    extends:
#      file: peer-base/peer-base-ci.yaml
#      service: peer-base
#    environment:
#      - CORE_PEER_ID=peer0.org3.example.com
#      - CORE_PEER_ADDRESS=peer0.org3.example.com:7060
#      - CORE_PEER_LISTENADDRESS=peer0.org3.example.com:7060
#      - CORE_PEER_EVENTS_ADDRESS=0.0.0.0:7061
#      - CORE_PEER_GOSSIP_EXTERNALENDPOINT=peer0.org3.example.com:7060
#      - CORE_PEER_GOSSIP_ENDPOINT=peer0.org3.example.com:7060
#      - CORE_PEER_GOSSIP_BOOTSTRAP=peer0.org3.example.com:7060
#      - CORE_PEER_LOCALMSPID=Org3MSP
##      - CORE_PEER_TLS_ROOTCERT_FILE=/etc/hyperledger/msp/peer/msp/cacerts/ca.org1.example.com-cert.pem
#      - CORE_PEER_TLS_CLIENTROOTCAS_FILES=/etc/hyperledger/msp/peer/msp/tlscacerts/tlsca.org3.example.com-cert.pem
#    command: >
#      sh -c "
#      mkdir -p /etc/hyperledger/configtx &&
#      mkdir -p /etc/hyperledger/msp/peer &&
#      echo \"${CONFIGTX}\" | base64 -d | tar -C /etc/hyperledger/configtx -xzvvf - &&
#      cp -r /etc/hyperledger/configtx/crypto-config/peerOrganizations/org3.example.com/peers/peer0.org3.example.com/* /etc/hyperledger/msp/peer &&
#      peer node start"
#    volumes:
#      - /var/run/:/host/var/run/
#    depends_on:
#       - orderer.example.com
#
#  peer0.org4.example.com:
#    hostname: peer0.org4.example.com
#    extends:
#      file: peer-base/peer-base-ci.yaml
#      service: peer-base
#    environment:
#      - CORE_PEER_ID=peer0.org4.example.com
#      - CORE_PEER_ADDRESS=peer0.org4.example.com:7062
#      - CORE_PEER_LISTENADDRESS=peer0.org4.example.com:7062
#      - CORE_PEER_EVENTS_ADDRESS=0.0.0.0:7063
#      - CORE_PEER_GOSSIP_EXTERNALENDPOINT=peer0.org4.example.com:7062
#      - CORE_PEER_GOSSIP_ENDPOINT=peer0.org4.example.com:7062
#      - CORE_PEER_GOSSIP_BOOTSTRAP=peer0.org4.example.com:7062
#      - CORE_PEER_LOCALMSPID=Org4MSP
##      - CORE_PEER_TLS_ROOTCERT_FILE=/etc/hyperledger/msp/peer/msp/cacerts/ca.org1.example.com-cert.pem
#      - CORE_PEER_TLS_CLIENTROOTCAS_FILES=/etc/hyperledger/msp/peer/msp/tlscacerts/tlsca.org4.example.com-cert.pem
#    command: >
#      sh -c "
#      mkdir -p /etc/hyperledger/configtx &&
#      mkdir -p /etc/hyperledger/msp/peer &&
#      echo \"${CONFIGTX}\" | base64 -d | tar -C /etc/hyperledger/configtx -xzvvf - &&
#      cp -r /etc/hyperledger/configtx/crypto-config/peerOrganizations/org4.example.com/peers/peer0.org4.example.com/* /etc/hyperledger/msp/peer &&
#      peer node start"
#    depends_on:
#       - orderer.example.com
#
#  peer0.org5.example.com:
#    hostname: peer0.org5.example.com
#    extends:
#      file: peer-base/peer-base-ci.yaml
#      service: peer-base
#    environment:
#      - CORE_PEER_ID=peer0.org5.example.com
#      - CORE_PEER_ADDRESS=peer0.org5.example.com:7066
#      - CORE_PEER_LISTENADDRESS=peer0.org5.example.com:7066
#      - CORE_PEER_EVENTS_ADDRESS=0.0.0.0:7068
#      - CORE_PEER_GOSSIP_EXTERNALENDPOINT=peer0.org5.example.com:7066
#      - CORE_PEER_GOSSIP_ENDPOINT=peer0.org5.example.com:7066
#      - CORE_PEER_GOSSIP_BOOTSTRAP=peer0.org5.example.com:7066
#      - CORE_PEER_LOCALMSPID=Org5MSP
##      - CORE_PEER_TLS_ROOTCERT_FILE=/etc/hyperledger/msp/peer/msp/cacerts/ca.org1.example.com-cert.pem
#      - CORE_PEER_TLS_CLIENTROOTCAS_FILES=/etc/hyperledger/msp/peer/msp/tlscacerts/tlsca.org5.example.com-cert.pem
#    command: >
#      sh -c "
#      mkdir -p /etc/hyperledger/configtx &&
#      mkdir -p /etc/hyperledger/msp/peer &&
#      echo \"${CONFIGTX}\" | base64 -d | tar -C /etc/hyperledger/configtx -xzvvf - &&
#      cp -r /etc/hyperledger/configtx/crypto-config/peerOrganizations/org5.example.com/peers/peer0.org5.example.com/* /etc/hyperledger/msp/peer &&
#      peer node start"
#    volumes:
#      - /var/run/:/host/var/run/
#    depends_on:
#       - orderer.example.com

  configtxlator:
      image: hyperledger/fabric-tools${IMAGE_TAG_FABRIC}
      ports:
        - "7059:7059"
      command: /usr/local/bin/configtxlator start

  daml-on-fabric-1:
      image: digitalasset/daml-on-fabric:2.2.0.1
      environment:
        - LEDGER_PORT=11111
        - LEDGER_ROLES=provision,time,ledger
        - LEDGER_DELAY=15s
        - LEDGER_AUTH=$LEDGER_AUTH
      ports:
        - "11111:11111"
      depends_on:
        - orderer.example.com
        - peer0.org1.example.com
        - peer0.org2.example.com

  daml-on-fabric-2:
      image: digitalasset/daml-on-fabric:2.2.0.1
      environment:
        - LEDGER_PORT=12222
        - LEDGER_ROLES=ledger
        - LEDGER_ARGS=semantic-tests.dar model-tests.dar performance-tests.dar
        - LEDGER_DELAY=80s
        - LEDGER_AUTH=$LEDGER_AUTH
      ports:
        - "12222:12222"
      depends_on:
        - orderer.example.com
        - peer0.org1.example.com
        - peer0.org2.example.com


